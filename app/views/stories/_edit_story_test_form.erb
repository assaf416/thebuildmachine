


<div id="editStoryTestForm"class="modal edit_story_test_modal xxx fade">

  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">Edit Story Test</h3>
  </div>
  <div class="modal-body">


    <form action='' method='post'>
      <fieldset>

        <textarea id="example_2" style="height: 650px; width: 100%;" name="test_2">


      Feature: Addition
        In order to avoid silly mistakes
        As a math idiot 
        I want to be told the sum of two numbers

        Scenario Outline: Add two numbers
          Given I have entered <input_1> into the calculator
          And I have entered <input_2> into the calculator
          When I press <button>
          Then the result should be <output> on the screen

        Examples:
          | input_1 | input_2 | button | output |
          | 20      | 30      | add    | 50     |
          | 2       | 5       | add    | 7      |
          | 0       | 40      | add    | 40     |



      Feature: Addition
        In order to avoid silly mistakes
        As a math idiot 
        I want to be told the sum of two numbers

        Scenario Outline: Add two numbers
          Given I have entered <input_1> into the calculator
          And I have entered <input_2> into the calculator
          When I press <button>
          Then the result should be <output> on the screen

        Examples:
          | input_1 | input_2 | button | output |
          | 20      | 30      | add    | 50     |
          | 2       | 5       | add    | 7      |
          | 0       | 40      | add    | 40     |

        </textarea>
      </fieldset>
    </form>


    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
  </div>


</div>


<style>
  .edit_story_test_modal{ height:620px; width:600px;}
</style>




<% content_for :head do  %>
  <script language="Javascript" type="text/javascript">
    // initialisation
    editAreaLoader.init({
      id: "example_2"	// id of the textarea to transform		
      ,start_highlight: true	// if start with highlight
      ,allow_resize: "both"
      ,allow_toggle: true
      ,word_wrap: true
      ,language: "en"
      ,syntax: "brainfuck"	
    });
		
	
		
	
		
	
    // callback functions
    function my_save(id, content){
      alert("Here is the content of the EditArea '"+ id +"' as received by the save callback function:\n"+content);
    }
		
    function my_load(id){
      editAreaLoader.setValue(id, "The content is loaded from the load_callback function into EditArea");
    }
		
    function test_setSelectionRange(id){
      editAreaLoader.setSelectionRange(id, 100, 150);
    }
		
    function test_getSelectionRange(id){
      var sel =editAreaLoader.getSelectionRange(id);
      alert("start: "+sel["start"]+"\nend: "+sel["end"]); 
    }
		
    function test_setSelectedText(id){
      text= "[REPLACED SELECTION]"; 
      editAreaLoader.setSelectedText(id, text);
    }
		
    function test_getSelectedText(id){
      alert(editAreaLoader.getSelectedText(id)); 
    }
		
    function editAreaLoaded(id){
      if(id=="example_2")
      {
        open_file1();
        open_file2();
      }
    }
		
    function open_file1()
    {
      var new_file= {id: "to\\ é # € to", text: "$authors= array();\n$news= array();", syntax: 'php', title: 'beautiful title'};
      editAreaLoader.openFile('example_2', new_file);
    }
		
    function open_file2()
    {
      var new_file= {id: "Filename", text: "<a href=\"toto\">\n\tbouh\n</a>\n<!-- it's a comment -->", syntax: 'html'};
      editAreaLoader.openFile('example_2', new_file);
    }
		
    function close_file1()
    {
      editAreaLoader.closeFile('example_2', "to\\ é # € to");
    }
		
    function toogle_editable(id)
    {
      editAreaLoader.execCommand(id, 'set_editable', !editAreaLoader.execCommand(id, 'is_editable'));
    }
	
  </script>
<% end %>

